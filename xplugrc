#!/bin/sh
# If not DOCK'ed output or LAPTOP, then it's likely VGA or Display Port
# used for presenation.  We assume the primary desktop screen (HDMI3) is
# placed left of the internal laptop screen, while during presentations
# the projector is on our right and the laptop screen is the primary.

# Built-in monitor, if any
BUILTIN=LVDS-1

# Cache of active dock display
CACHE=/tmp/xplugd.cache

# Enable logging by writing to a file in /tmp
LOG=/tmp/xplugd.log

TYPE=$1
DEVICE=$2
STATUS=$3
shift 3
DESC=$*

log()
{
    if [ ! -f $LOG -a -n "$LOG" ]; then
	touch $LOG
    fi
    if [ -f $LOG ]; then
	echo "$*" >>$LOG
    fi
}

randr()
{
    #XRANDR="xrandr --nograb"
    XRANDR="xrandr"

    log "CMD: $XRANDR $*"
    output=`$XRANDR $*`
    if [ -n "$output" ]; then
	log $output
    fi
}

display()
{
    for file in /sys/class/drm/*/edid; do
	if [ -n "`strings $file | grep S2401W`" ]; then
	    echo "EIZO"
	    return
	fi
	if [ -n "`strings $file | grep U2412M`" ]; then
	    echo "DELL"
	    return
	fi
    done
    echo ""
}

placement()
{
    if [ `hostname` != "troglobit" ]; then
	p="--right-of"
    else
	DISP=`display`
	log "Found display $DISP"
	if [ "$DISP" = "EIZO" ]; then
	    p="--left-of"
	elif [ "$DISP" = "DELL" ]; then
	    p="--right-of"
	else
	    p="--same-as"
	    p="--right-of"
	fi
    fi
    echo $p
}

log "Plug event: $TYPE $DEVICE => $STATUS :: $DESC"
if [ `hostname` = "luthien" ]; then
    BUILTIN=eDP-1
    adjust="0x0"
    scale="--scale 0.7x0.7"
else
    # adjust="0x432"
    adjust=""
    scale=""
fi

if [ "$TYPE" != "display" ]; then
#    log "Peripheral $TYPE $STATUS: $DESC"
    case "$TYPE,$STATUS,$DESC" in
        pointer,connected,"SynPS/2 Synaptics TouchPad")
            xinput enable  $DEVICE
            xinput set-prop $DEVICE "libinput Tapping Enabled" 1
	    xinput set-prop $DEVICE "libinput Natural Scrolling Enabled" 1
            ;;
        keyboard,connected,*)
            setxkbmap -layout se -option ctrl:nocaps
            ;;
    esac
else
    if [ "$STATUS" = "disconnected" ]; then
	randr --output $DEVICE --off
	randr --output $BUILTIN $scale
    else
	if [ "$DEVICE" = "LVDS-1" -o "$DEVICE" = "eDP-1" ]; then
	    log "NOP $DEVICE already connected"
	    exit 0
	fi
	pos=`placement`
	randr --output $DEVICE --primary $pos $BUILTIN --auto
	# if [ "$pos" = "--left-of" ]; then
	# 	adjust=1920x432
	# fi
	randr --output $BUILTIN --pos $adjust $scale
    fi
fi

exit 0

